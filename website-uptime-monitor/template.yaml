AWSTemplateFormatVersion: 2010-09-09
Transform: AWS::Serverless-2016-10-31

Parameters:
  StackTitle:
    Type: String
    Default: "Website uptime monitor"
    Description: "Resource title to prefix child resources"

  StackDescription:
    Type: String
    Description: "Resource description to describe the stack and the lambda"

  TargetUrl:
    Type: String
    Default: "https://kondratenko.me"
    Description: "Website url to check the uptime status"

  TimeoutThreshold:
    Type: String
    Default: 2222
    Description: "Lambda execution timeout threshold in milliseconds"

  TargetNotificationsTopics:
    Type: List<String>
    Default: ""
    Description: "Simple notifications service topics arns"

Conditions:
  IsTargetNotificationsTopicsDefined: !Not [!Equals [ !Join [ ",", !Ref "TargetNotificationsTopics" ], "" ] ]

Resources:
  Lambda:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Ref AWS::StackName
      Description: !Ref StackDescription
      Handler: index.handler
      Runtime: "nodejs12.x"
      CodeUri: dist
      MemorySize: 128
      Timeout: 300
      Role: !GetAtt LambdaExecutionRole.Arn
      Environment:
        Variables:
          TARGET_URL: !Ref TargetUrl

  LambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - sts:AssumeRole
      Policies:
        - PolicyName: allow-logs
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - 'logs:*'
                Resource: arn:aws:logs:*:*:*
        - PolicyName: put-cw-data
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - 'cloudwatch:PutMetricData'
                Resource: '*'

  LogGroup:
    Type: "AWS::Logs::LogGroup"
    Properties:
      LogGroupName: !Sub "/aws/lambda/${AWS::StackName}"
      RetentionInDays: 7

  ScheduledRule:
    Type: AWS::Events::Rule
    Properties:
      Description: "ScheduledRule"
      ScheduleExpression: "rate(1 minute)"
      State: "ENABLED"
      Targets:
        -
          Arn:
            Fn::GetAtt:
              - "Lambda"
              - "Arn"
          Id: "TargetFunctionV1"

  PermissionForEventsToInvokeLambda:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !Ref AWS::StackName
      Action: "lambda:InvokeFunction"
      Principal: "events.amazonaws.com"
      SourceArn:
        Fn::GetAtt:
          - "ScheduledRule"
          - "Arn"

  UptimeAlarm:
    Type: AWS::CloudWatch::Alarm
    Condition: IsTargetNotificationsTopicsDefined
    Properties:
      AlarmName: !Sub "${StackTitle} - Website uptime monitor - Is down"
      AlarmDescription: "Alarm if lambda triggered an error."
      AlarmActions: !Ref "TargetNotificationsTopics"
      OKActions: !Ref "TargetNotificationsTopics"
      Namespace: "AWS/Lambda"
      MetricName: "Errors"
      Dimensions:
        - Name: "FunctionName"
          Value: !Ref AWS::StackName
      Statistic: "Maximum"
      ComparisonOperator: "GreaterThanOrEqualToThreshold"
      Threshold: 1
      EvaluationPeriods: 1
      Period: 180
      TreatMissingData: "breaching"

  TimeoutAlarm:
    Type: AWS::CloudWatch::Alarm
    Condition: IsTargetNotificationsTopicsDefined
    Properties:
      AlarmName: !Sub "${StackTitle} - Website uptime monitor - Response time is above the limit"
      AlarmDescription: "Alarm if lambda execution time above the limit."
      AlarmActions: !Ref "TargetNotificationsTopics"
      OKActions: !Ref "TargetNotificationsTopics"
      Namespace: "AWS/Lambda"
      MetricName: "Duration"
      Dimensions:
        - Name: "FunctionName"
          Value: !Ref AWS::StackName
      Statistic: "Maximum"
      ComparisonOperator: "GreaterThanOrEqualToThreshold"
      Threshold: !Ref TimeoutThreshold
      EvaluationPeriods: 2
      Period: 180
      TreatMissingData: "breaching"
